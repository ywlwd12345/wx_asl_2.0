<template>
  <view>
  <details gid="{{gid}}" c-bind:onshow="setShartTitle" 
   c-bind:setScrollTop="setScrollTop"
   c-bind:onshowCarouselH="setCarouselH" ></details>
    <view class="{{backTopFlag?'back-top':'back-top1'}}" c-bind:tap="goTop" >
    <image src="{{backTop}}" style="width:81cpx;height:81cpx;"></image>

  </view>
  </view>
</template>

<script>
import store from '../../store'

class Details   {

  data = {
    gid:'',
    title:'' ,
    backTopFlag:true,
    backTop:require("../../assets/images/hddc@2x.png"),
    carouselH:'',//组件内轮播图高度 单位px
  }

  computed = {

  }

  watch  = {
  }

  methods = {
    setShartTitle(e){
       this.title=e.detail.value
       
    },

     onShareAppMessage: function (res) {
    if (res.from === 'button' && res.target.id==='1'){
      const data=res.target.dataset.goodsdata
        return {
      title:data.title,
      desc: data.title,
      path: '/pages/index/index?gid='+data.id,
      imageUrl:data.thumb
    }

    }else{
      // 来自页面的分享
         return {
      title:this.title,
      desc: ''

    }

    }


     
  },
  //监听小程序页面滚动
    onPageScroll:function(e){
    if(e.scrollTop>800){
       this.backTopFlag=false
    }else{
        this.backTopFlag=true 
    }
    if(e.scrollTop>this.carouselH*0.25 && e.scrollTop<this.carouselH*0.5){
      store.commit('navOpacity',0.5)
    }else if(e.scrollTop>this.carouselH*0.5 && e.scrollTop<this.carouselH*0.75){
      store.commit('navOpacity',0.75)
    }else if(e.scrollTop>this.carouselH){
        store.commit('navOpacity',1)
    }
    if(e.scrollTop===0){
       store.commit('navOpacity',0)
    }

       store.commit('detailTop',e.scrollTop)






    // console.log(e,'哈哈猪123')



        },

        //小程序页面回到顶部
goTop(){
   wx.pageScrollTo({
      scrollTop: 0,
      duration: 2000
    })

},

//获取组件内轮播图的高度
setCarouselH({detail}){
  this.carouselH=detail.value
 
},

setScrollTop({detail}){
  const TopH=detail.value
  this.toTop(TopH)
},
toTop(num){
   wx.pageScrollTo({
      scrollTop: num,
      duration: 1000
    })

}

  
  }

  beforeCreate(query) {
     if(query.q){
       let q= decodeURIComponent(query.q)
       let arr=q.split('gid=')
       this.gid=arr[1]
      return
     }

    this.gid=query.gid
  }

  onLoad(options) {



  }

  created(query) {
  }

  beforeMount(query) {
  }

  onShow() {
  }

  mounted() {
  }

  onHide() {
  }

  beforeDestroy() {
  }

  destroyed() {
  }
}

export default new Details();
</script>

<style scoped>

.back-top{
  width: 81cpx;
  height: 81cpx;
  background: #fff;
  border-radius: 50%;
  opacity: 0;
  position: fixed;
  z-index: 999;
  bottom: 18%;
  right:0;
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  transition: all 1.5s;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
}


.back-top1{
  width: 81cpx;
  height: 81cpx;
  border-radius: 50%;
  background: #fff;
  opacity: 0.6;
  position: fixed;
  z-index: 999;
  bottom: 18%;
  right:0;
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.8);
}


</style>

<script cml-type="json">
{
  "base": {
    "usingComponents": {
        "details": "/components/details/details"

    }
  },
  "qq": {
    "navigationBarTitleText": "index",
    "backgroundTextStyle": "dark",
    "backgroundColor": "#E2E2E2"
  },
  "wx": {
    "navigationStyle":"custom"
  },
  "alipay": {
    "defaultTitle": "index",
    "pullRefresh": false,
    "allowsBounceVertical": "YES",
    "titleBarColor": "#ffffff"
  },
  "baidu": {
    "navigationBarBackgroundColor": "#ffffff",
    "navigationBarTextStyle": "white",
    "navigationBarTitleText": "index",
    "backgroundColor": "#ffffff",
    "backgroundTextStyle": "dark",
    "enablePullDownRefresh": false,
    "onReachBottomDistance": 50
  }
}
</script>
