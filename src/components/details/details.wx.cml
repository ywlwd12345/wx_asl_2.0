<template>
   <view class="container">
   <nav title="{{title}}"></nav>
  <!--nav end-->
  <view class="store-detail">
  <carousel class="wrap-img" indicator-dots="{{true}}"  current="{{0}}" circular="{{true}}" autoplay="{{true}}">
      <block
         c-for="{{ storeList}}"
          c-for-index="i"
          c-for-item="item"
      >
      <carousel-item>
        <view class="carousel-item" style="background-color: #EBDEAA">
         <image src="{{item}}" style="width:750cpx;height:750cpx;"></image>
        </view>
      </carousel-item>
      </block>
      </carousel>
      <view class="desc">
      <view class="price">
      <text class="now-price spec-text">￥{{allDetails.price}}</text>
      <text class="original-price spec-text" style="margin-left:100cpx;">￥{{allDetails.marketPrice}}</text>
      </view>
      <view class="ASL">
      <text class="als-text spec-text">可获取的ASL3数量：{{allDetails.getAsl3}}</text>
      <text class="als-text spec-text">可抵扣的ASL1数量：{{allDetails.useAsl1}}</text>
      </view>
      <view class="product-name"><text class="spec-name">{{allDetails.name}}</text></view>
      </view>
  </view>

  <view class="js js1">
  <view class="ms"><text class="spec-text">销量:</text><text class="js-color">999+</text></view>
  <view class="ms"><text class="spec-text">收藏:</text><text class="js-color">999+</text></view>
  <view class="ms"><text class="spec-text">库存:</text><text class="js-color">充足</text></view>
  </view>

   <view class="js js2">
  <view class="ms"><image src="{{iconSpec}}"
   style="width:22cpx;height:22cpx;margin-right:8cpx;"></image><text class="spec-text">全国包邮</text></view>
  <view class="ms"><image src="{{iconSpec}}"
   style="width:22cpx;height:22cpx;margin-right:8cpx;"></image><text class="spec-text">假一赔十</text></view>
  <view class="ms"><image src="{{iconSpec}}"
   style="width:22cpx;height:22cpx;margin-right:8cpx;"></image><text class="spec-text">正品保证</text></view>
  <view class="ms"><image src="{{iconSpec}}"
   style="width:22cpx;height:22cpx;margin-right:8cpx;"></image><text class="spec-text">源头供货</text></view>
  </view>

  <view class="js js3">
  <view class="ms"><text class="spec-text">详情介绍</text></view>
  <view class="ms"><text class="spec-text">好评度:</text><text class="js-color spec-text" >100%</text></view>
  </view>


  <view class="details-content">
    <origin-rich-text nodes="{{ allDetails.content }}"></origin-rich-text>
  </view>



  <view class="goods-action">
  <van-goods-action>
  <van-goods-action-icon
    icon="chat-o"
    text="客服"
    bind:click="onClickIconTel"
  />
   <van-goods-action-icon
    icon="cart-o"
    text="购物车"
    bind:click="onClickIconCart"
  />
  <view class="coolect_t" c-bind:tap="coolect_p">
    <van-icon name="{{iconss}}" color="{{colors}}" size="20px"/>
    <view class="coolect">收藏</view>
  </view>
<!--<view  class="spec-column"></view>-->

    <van-goods-action-button
    text="加入购物车"
    type="warning"
    bind:click="onClickButtonCart"
  />
  <van-goods-action-button
    text="立即购买"
    bind:click="onClickButtonNow"
  />


</van-goods-action>
  </view><!--goods-action end-->

  <!--选择商品规格-->
   <view class="pane">
  <van-action-sheet show="{{ show }}" title=""  bind:click-overlay="haha">
  <view class="wrap-sheet">
  <view class="introduce">
  <view>
  <image src="{{allDetails.thumb}}" style="width: 120cpx;height:120cpx;"></image>
  </view>
  <view style="width:300cpx;">
  <text class="spec-panel-text" >{{allDetails.name}}</text>
  <text class="spec-panel-text" style="color:#ff0000;" >{{guige_price}}</text>

  </view>
  <view class="icon" c-bind:tap="close">
  <van-icon name="cross" size="30px"  color="#eeeeee" />
  </view>
  </view>
  <!-- introduce end-->
 <!--<view class="pecifications">
    <view class="titles">规格</view>
    <view class="pecilist">
      <view class="atr" c-for="{{allDetails.specs}}" c-for-index="index" c-for-item="item" c-bind:click="choicege(item,index)">
        <text class="{{guige==index?'pecilist2':'strtext'}}">{{item.attr}}</text>
      </view>
    </view>
  </view>-->
<block
   c-for="{{ styleDatas}}"
          c-for-index="key"
          c-for-item="item"
  >
  <view class="spec-color" c-if="{{item.size.length}}">
  <view class="title-style"><text>{{item.style}}</text></view>
  <view class="color-box">

  <block
   c-for="{{item.size}}"
          c-for-index="i"
          c-for-item="itemSize"
  >
  <text class="{{itemSize.bool?'box1':'box0'}}" c-bind:tap="findColor"
  data-key="{{key}}"
  data-id="{{itemSize.id}}">{{itemSize.size}}</text>
  </block>
  </view>
  </view>
  </block>

  <!-- spec-size end-->
  <view class="btn"><van-button type="primary"
  color="linear-gradient(to right, #f857a6, #ff5858);"
   block bind:click="goSure">确定</van-button></view>

  </view>
</van-action-sheet>
</view>
<van-dialog id="van-dialog" confirm-button-color="#ff410f" />
<share-pop obj="{{passObj}}" c-if="{{objFlag}}" c-bind:onshow="setBackground"></share-pop>
<view class="pop-back" style="{{popStyle}}"></view>
  </view>
</template>

<script>
import cml from 'chameleon-api';
import {getGoodDetails,getStyle,addCartData,getBaseUserInfo,CollectiongGoods,deletesGoods} from '../../api/index'

import {getErWeiData} from '../../api/grouping.js' //引入拼团模块接口

import { dealDetailsStrData,arrayChangeObj,dealImg,dealDetailsStyle} from '../../untils/processData'
import store from '../../store'
import Dialog from '../../vant/dialog/dialog'
class Details implements DetailsInterface {
  props = {
    name: {
      type: String,
      default: '默认值'
    },
    gid: {
      type: String,
      default: ''
    }
  }

  data = {
    iconss:'like-o',
    colors:'rgb(100,101,102)',
    purchase:0,//判断是加入购物车还是直接购买  直接购买为1
    login:'',
    guige_price:'',
    guige:'100',
    ceshi:[1,2,3,4,5],
    title:"详情",
    iconSpec:require('../../assets/images/linkIcon/gou.png'),
    storeList:[],
    allDetails:{},
    ensureSrc:'',//产品首页原图
    productDetails:[],
    show:false,
    clorList:[],
    style:[],
    sizeList:[],
    color:'',//提交时的颜色数据
    size:'',//提交时的尺寸数据
    checkColor:[],
    checkSize:[],
    attr:[],
    isCart:false,
    content:'',
    styleData:[],
    styleObj:{},
    passArr:[],
    chooseStyle:[],
    price:'',
    cartdata:{
      uname:'',
      goodsId:'',
      spec:'',
      count:1,
      selected:false
    },
    styleDatas:{
    },
    passObj:{},// 传送给分享弹框的对象
    objFlag:false, // 为了传异步的值给弹框组件
    popStyle:'',
    erWeiMaUrl:''
  }

  computed = {
  }

  watch = {
  }

  methods = {
    //分享弹框之后设置背景颜色
    setBackground(e){
      this.popStyle=e.detail.value


    },
    //获取分享二维码
     shareEWM(){
      const data={page:'pages/index/index',scene:`gid=${this.gid}`,width:280,goods_id:this.gid}

     return getErWeiData(data).then(res=>{

       
       
        if(res.code){
          this.erWeiMaUrl='https://'+res.data
        }
        resolve()

      }).catch(err=>{})


    },
    // 收藏商品
    coolect_p(){
      if(this.allDetails.isCollect===1){
        deletesGoods({goodsId:this.allDetails.goodsId}).then(res=>{
          console.log("取消",res)
          if(res.code==1){
            this.iconss='like-o'
            this.colors='rgb(100,101,102)'
            this.allDetails.isCollect=0
            cml.showToast({
              message: "取消成功",
              duration: 1000
            })         
          }
        }).catch(err=>{

        })
      }else{
        var data={}
        data.goodsId=this.allDetails.goodsId
        console.log("json",data)
        data=JSON.stringify(data)
        CollectiongGoods(data).then(res=>{
          console.log("收藏",res)
          if(res.code==1){
            this.iconss='like'
            this.colors='red'
            this.allDetails.isCollect=1
            cml.showToast({
              message: "收藏成功",
              duration: 1000
            })         
          }
        }).catch(err=>{

        })
      }
    },
    //选中规格
    choicege(val,index){
      this.guige=index
      this.guige_price=val.price
      this.cartdata.goodsId=this.allDetails.goodsId
      this.cartdata.spec=val.id
    },
    //获取商品详情数据
   async getDetailsData(data){
     await this.shareEWM()
     getGoodDetails(data).then(res=>{
        if(res.code==1){
          res.data[0].content=dealImg(res.data[0].content)

          console.log(res.data[0])
          
          this.allDetails=res.data[0]
          // this.allDetails.getAsl1=Number(this.allDetails.getAsl1)
          // console.log( this.allDetails.getAsl1,335566)

         


          this.allDetails.thumb='https://'+this.allDetails.thumb
          const passObj={id:this.allDetails.goodsId,thumb:this.allDetails.thumb,
          title:this.allDetails.name,erWeiMa:this.erWeiMaUrl,price:this.allDetails.price}
          this.passObj=passObj

          this.objFlag=true //让数据传输到弹框组件 通过组件的显隐
        
          if(this.allDetails.isCollect===1){
            this.iconss='like'
            this.colors='red'
          }
          this.$cmlEmit('onshow',{
      value:this.allDetails.name
    })
          
          console.log("标题",this.allDetails.styleData.style)
          console.log("具体",this.allDetails.styleData.style_data)
          this.styleDatas=dealDetailsStyle(this.allDetails.styleData.style,this.allDetails.styleData.style_data)
          console.log("信息",this.styleDatas)
          // for(var i=0;i<this.allDetails.styleData.style.length;i++){
          //   this.Specifications.title[i].push(this.allDetails.styleData.style[i])
          // }
          // console.log(this.Specifications)
          res.data[0].imgs.forEach((val)=>{
            val='https://'+val
            this.storeList.push(val)
          });

        
        



        }
      })


    },
    haha(){
      this.show=true
    },

    close(){
       this.show=false
       this.isCart=false

    },
    //获取属性数据
    getStyleData(){
      this.show=false
      cml.navigateTo({
        path: '/pages/confirm-order/confirm-order',
        query:{gid:this.allDetails.goodsId,attr:this.cartdata.spec}
      })
    },
// 立即购买
    onClickButtonNow(){
      if(store.state.isCancelLogin){
        this.Verification() 
      }else{
        if(this.allDetails.specs.length==0){
          this.getStyleData()
        }else{
          this.purchase=1//直接购买
          this.show=true
        // this.getStyleData()
        console.log("有规格")
        }
      }
    },
    findColor(e){
      console.log(e)
      let key=e.currentTarget.dataset.key
      let id=e.currentTarget.dataset.id

     this.styleDatas[key].size.map(d=>{
        if(d.id===id){
          d.bool=true
         this.styleObj[this.styleDatas[key].style]=d.size
        }else{
           d.bool=false
        }
        this.chooseStyle.push(this.styleDatas[key].style)
        //数组去重
        this.chooseStyle=Array.from(new Set(this.chooseStyle))
        return d
      })
      console.log("重点传走",this.chooseStyle)
      this.dealStyleObj(this.styleObj)
      this.choosePrice()
    },

    //处理样式对象
    dealStyleObj(obj){
      this.passArr=[]
       for(let key  in obj){
         this.passArr.push(obj[key])
  }
  console.log("重点传走",this.passArr)
    },
//选择规格后的价格
  choosePrice(){
    console.log(1)
    if(this.passArr.length==this.allDetails.specs[0].attr.length){
      console.log(2)
      this.allDetails.specs.forEach(element => {
        console.log(3)
        console.log(element.attr)
        console.log(this.passArr)
        if(element.attr.sort().toString()== this.passArr.sort().toString()){
          console.log(4)
          this.guige_price=element.price
          this.cartdata.spec=element.id
        }
        
      });
      console.log("传走",this.cartdata)
    }else{

    }
// if(this.attr.find(d=>d.attr.sort().toString()===this.passArr.sort().toString())){
//    let attrId=this.attr.find(d=>d.attr.sort().toString()===this.passArr.sort().toString()).id
//      this.guige_price= this.attr.find(d=>d.id==attrId).price
// }

  },
Verification(){
    Dialog.confirm({
      title: '提示',
      context:this,
      message: '你需要登录才能正常使用,去登录？'
    }).then(() => {
    cml.redirectTo({
      path: '/pages/login/login'
    }) 
    }).catch(() => {
      
    });
},
    //确定加入购物车
    goSure(){
      if(this.cartdata.spec==''){
          cml.showToast({
            message: "请选择规格",
            duration: 1500
          })
      }else{
        this.cartdata.goodsId=this.allDetails.goodsId
        if(this.purchase==1){
          this.purchase=0
          this.getStyleData()
        }else{
        cml.getStorage("uname").then(value => {
          this.cartdata.uname=value
          //转换成json格式
          this.cartdata=JSON.stringify(this.cartdata)
          addCartData(this.cartdata).then(res=>{
            if(res.code==1){
              this.show=false
              this.cartdata=JSON.parse(this.cartdata)
            cml.showToast({
              message: "添加成功",
              duration: 1500
            })
            }
          }).catch(err=>{
            cml.showToast({
              message: "获取出错",
              duration: 1500
            })
          })

        })
        }
      }
  },
  checkStyle(){
    let flag=true
    if(!this.chooseStyle.length){
      this.tip(this.styleData[0].style)
      flag=false
       return
    }

this.styleData.map(d=>{
  if(!this.chooseStyle.find(c=>c===d.style) && d.size.length){
    flag=false
    this.tip(d.style)
  }
  return d
})

return flag




  },
  tip(msg){
     cml.showToast({
        message: `请选择${msg}`,
        duration: 1000
        })


  },

  //点击加入购物车
  onClickButtonCart(){
    if(store.state.isCancelLogin){
        this.Verification() 
     }else{
        if(this.allDetails.specs.length==0){
          cml.getStorage("uname").then(value => {
            this.cartdata.uname=value
            this.cartdata.goodsId=this.allDetails.goodsId
            //转换成json格式
            this.cartdata=JSON.stringify(this.cartdata)
            addCartData(this.cartdata).then(res=>{
              if(res.code==1){
                this.show=false
              cml.showToast({
                message: "添加成功",
                duration: 1500
              })
              }
            }).catch(err=>{
              cml.showToast({
                message: "获取出错",
                duration: 1500
              })
            })
          })
        }else{
          this.isCart=true
          this.show=true
        }
     }

  },
  onClickIcon(e){
    console.log(e)
    this.goods='like'
    console.log("收藏")
  },
//点击客服电话
  onClickIconTel(){
    let uname
    cml.getStorage("uname").then(value => {
    uname=value
    getBaseUserInfo({uname:uname}).then(res=>{
      this.wxCall(res.data[0].serviceMobile)
    }).catch(err=>{})
    })
  },
  //微信打电话
  wxCall(numb){
    wx.makePhoneCall({
  phoneNumber: numb //仅为示例，并非真实的电话号码
})
  },
  onClickIconCart(){
   store.commit('changeCart', true)
   cml.navigateTo({
  path: '/pages/index/index'
  })


  }
    }

  beforeCreate(query) {

 


}



  created() {
  }

  beforeMount() {
    
  }

  mounted() {
     this.getDetailsData({id:this.gid})
    //  setTimeout(() => {
    //    this.objFlag=true
    //  }, 1000);

   
  }

  beforeDestroy() {
  }

  destroyed() {
  }
}

export default new Details();
</script>

<style scoped>
.title-style{
  margin-left:15cpx;
  letter-spacing: 2cpx;
  font-size: 28cpx;
  margin-bottom:15cpx;
}

@media screen and (max-width: 320px) {
  .spec-column{
  width:0cpx;
}

}

.spec-color{
  margin-top:20cpx;
}

.spec-column{
  width:25cpx;
}


.spec-name{
  font-size: 28cpx;
  letter-spacing: 2cpx;
}

.container{
width: 750cpx;
background: #eee;

}

.spec-text{
   letter-spacing: 2cpx;

}

.spec-panel-text{
   letter-spacing: 2cpx;
   font-size: 24cpx;
}


.store-detail{
  width: 750cpx;

}

.wrap-img{
  width: 750cpx;
  height: 750cpx;
}
.carousel-item {
  height: 750cpx;
  width: 750cpx;
}

.desc{
  width: 750cpx;
  background: #eaeaea;
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  align-items: flex-start;
  min-height: 150cpx;
  padding:15cpx 15cpx;

}

.price{
  display: flex;
  justify-content: start;
  align-items: center;
  flex-direction: row;
}
.original-price{
  text-decoration:line-through;
  color:#b0bec5;
}
.now-price{
  color:#ff0000;
  font-weight: bold;
}

.ASL{
  width:100%;
  height: 40cpx;

  padding:8cpx 0;
  margin:10cpx 0;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;

}

.als-text{
  padding:10cpx;
  background: #ff0000;
  color: #fff;
  font-size: 24cpx;
  line-height: 24cpx;
}

.goods-img{
  margin-top:50cpx;
}

.wrap-sheet{
  width: 750cpx;
  /* background: red; */
  position: relative;
  min-height: 600cpx;
  padding-bottom:20cpx;
}

.introduce{
  width: 100%;
  margin-top:15cpx;
  flex-direction: row;
  display: flex;
  justify-content: space-around;
  align-items: center;
  border-bottom:2cpx solid #eee;
  padding-bottom:20cpx;
}

.icon{
  align-self:flex-start;

}

.color-box{
  width: 600cpx;
  display:flex;
  flex-wrap:wrap;
  justify-content:flex-start;
  flex-direction: row;
  align-items: center;
}
.box0{
  display: inline-block;
  margin-left:15cpx;
  padding:10cpx 10cpx;
  border-radius: 8cpx;
  border:2cpx solid #000;
  text-align: center;
  margin:0 10cpx;
  margin-bottom:15cpx;
  letter-spacing: 2cpx;
   font-size: 20cpx;
}
.box1{
  display: inline-block;
  padding:10cpx 10cpx;
   margin-left:15cpx;
  border-radius: 8cpx;
  border:2cpx solid #ff410f;
  text-align: center;
  margin:0 10cpx;
  margin-bottom:15cpx;
  letter-spacing: 2cpx;
  font-size: 20cpx;
}




.btn{
  width:100%;
  position: fixed;
  bottom:0;
  margin-top:50cpx;
}

.details-content{
  width:750cpx;
  padding-bottom:130cpx;
}
.rich-img{
  width:750cpx;
  height: auto;
}

.img-ks-lazyload{
   width:750cpx;
  height: auto;

}

.js{
  width:750cpx;
  height: 100cpx;
  background: #fff;
  margin-bottom:20cpx;
  /* border-bottom: 20cpx #eee solid; */
  display: flex;
  flex-direction: row;
  justify-content: space-around;
  align-items: center;


}

.js-color{
  color: #cd4a50;

}

.js2 .ms{
   display: flex;
  justify-content: space-around;
  align-items: center;
  flex-direction: row;
}

.js1 .ms{
   display: flex;
  justify-content: space-around;
  align-items: center;
  flex-direction: row;
}

.js3 .ms{
  display: flex;
  justify-content: space-around;
  align-items: center;
  flex-direction: row;
}

.js3{
  margin-bottom:0cpx;
}
.pecifications{
  padding: 10cpx;
}
.pecilist{
  display: flex;
  flex-direction: row;
  align-items: center;
}
.pecifications .atr{

}
.pecifications .strtext{
  width: 70cpx;
  line-height: 30cpx;
  font-size: 20cpx;
  text-align: center;
  margin: 10cpx;
  border: 1px solid #000;
  border-radius: 10cpx;
}
.pecilist2{
  font-size: 20cpx;
  width: 70cpx;
  line-height: 30cpx;
  text-align: center;
  margin: 10cpx;
  border-radius: 10cpx;
  border: 1px solid #ff0000;
}
.coolect{
  color:rgb(100,101,102);
  font-size: 28cpx;
  line-height: 28cpx;
  position: relative;
  top:3cpx;
}
.coolect_t{
  /* padding-top: 5cpx; */
  margin:0 25cpx 0 15cpx; 
}

.pop-back{
  position: fixed;
  z-index: 998;
  width:100vw;
  height: 100vh;
  display: none;

  

}
</style>

<script cml-type="json">
{
  "base": {
    "usingComponents": {
          "nav":"/components/nav/nav",
          "van-nav-bar": "/vant/nav-bar/index",
          "van-icon": "/vant/icon/index",
          "van-goods-action": "/vant/goods-action/index",
          "van-goods-action-icon": "/vant/goods-action-icon/index",
          "van-goods-action-button": "/vant/goods-action-button/index",
          "van-action-sheet": "/vant/action-sheet/index",
           "van-icon": "/vant/icon/index",
           "van-button": "/vant/button/index",
           "van-dialog": "/vant/dialog/index",
            "share-pop":"/components/share-pop/share-pop"
    }
  }
}
</script>