<template>
    <view class="container">
<nav title="{{title}}"></nav>
<view class="column" style="height:15cpx"></view>
  <van-cell-group>
  <van-field
    required
    clearable
    label="登录密码："
    placeholder="请输入登录密码"
      bind:change="oldPassword"
    error-message="{{ checkPassword }}"
  />

  <van-field
    label="支付密码："
    placeholder="请输入新支付密码"
    required
       bind:change="newWord"
    error-message="{{  checkNewpassword  }}"
    type="password"
  />

  <van-field
    label="确认密码："
    placeholder="再次输入新支付密码"
    required
      bind:change="newPass"
    error-message="{{ checkNewpassword1 }}"
    type="password"
  />
    </van-cell-group>
<view class="btn">
<van-button type="primary" 
color="linear-gradient(to right, #e73827, #f85032)"
round block bind:click="sure">确定修改</van-button>
</view>
  </view>
 
</template>


<script>
import cml from 'chameleon-api';
import {changePay} from '../../api/index'
class ChangePay implements ChangePayInterface {
  props = {
    name: {
      type: String,
      default: '默认值'
    }
  }

  data = {
    title:'修改支付密码',
     password:'',
    newpassword:'',
    newPassword1:'',
    checkPassword:'',
    checkNewpassword:'',
    checkNewpassword1:''
  }

  computed = {
  }

  watch = {
  }

  methods = {
     oldPassword(e){
      this.password=e.detail
      this.checkPassword=''

    },
   newWord(e){
        this.newpassword=e.detail
        this.checkNewpassword=''
      
    },
    newPass(e){
       this.newPassword1=e.detail
       this.checkNewpassword1=''
     
    },
    sure(){
      if(this.check()){
        if(this.newpassword===this.newPassword1){
           this.changeWord()
        }else{
           cml.showToast({
        message: "两次密码不一致",
        duration: 1000
      })

        }

      }

    },
    //修改支付密码
    changeWord(){
      let uname
      cml.getStorage('uname').then((value)=>{
      uname=value
      changePay({uname:uname,passWord:this.password,payPass1:this.newpassword,payPass2:this.newPassword1}).then(res=>{
        if(res.code){
          cml.showToast({
            message: "修改成功",
            duration: 1000
          })
        setTimeout(()=>{cml.navigateBack(-1)},2000)

        }else{
        cml.showToast({
          message: res.msg,
          duration: 1000
        })
        }
      }).catch(err=>{})
      })
  },
   check(){
      if(!this.password){
        this.checkPassword='请输入原密码'
        return false
      }else if(!this.newpassword){
        this.checkNewpassword='请输入新支付密码'
          return false
      }else if(!this.newPassword1){
        this.checkNewpassword1='请确认新支付密码'
          return false
      }else{
        return true
      }

    }
  }

  beforeCreate() {
  }

  created() {
  }

  beforeMount() {
  }

  mounted() {
    this.$cmlEmit('onshow',{
      value: this.name
    })
  }

  beforeDestroy() {
  }

  destroyed() {
  }
}

export default new ChangePay();
</script>

<style scoped>

.btn{
  width: 80%;
  margin:0 auto;
  margin-top:40cpx;
}


</style>

<script cml-type="json">
{
  "base": {
    "usingComponents": {
      "nav":"/components/nav/nav",
        "van-field": "/vant/field/index",
         "van-button": "/vant/button/index"
    }
  }
}
</script>