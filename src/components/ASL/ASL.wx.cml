<template>
  <view class="container" style="min-height:{{viewPortHeight}}cpx;">
  <nav title="{{title}}"></nav>
  <list
      bottom-offset="{{20}}"
      c-bind:scrolltobottom="onBottom"
      height="{{ viewPortHeight}}"
    >
    <cell
          class="cell"
          c-for="{{aslLists}}"
          c-for-index="i"
          c-for-item="item"
          data-idx="{{i}}"
        >
         <view class="list-wrap">
  <view class="top">
  <text class="top-text1">{{item.channel}}</text>
  <text class="top-text2" c-if="{{item.type=='收入'}}">{{item.type==="收入"?'+':'-'}} {{item.fee}}</text>
  <text class="top-text3" c-if="{{item.type=='支出'}}">{{item.type==="收入"?'+':'-'}} {{item.fee}}</text>
  
  </view>
  <view class="bottom">
  <text class="spec-type">{{item.type}}</text>
  <text class="bottom-text1">{{item.createTime}}</text>
  </view>
  </view>
        </cell>
    </list>

  
    <view class="loading">
    <i-spin  c-if="{{ loading}}"  size="large"></i-spin>
  </view>

 
  
  </view>
</template>

<script>
import cml from 'chameleon-api';
import {getAslData} from '../../api/index'
import { moment }  from '../../untils/moment.js'

class ASL implements ASLInterface {
  props = {
    name: {
      type: String,
      default: '默认值'
    },
     title:{
         type: String,
        default: ''

     }
  }

  data = {
    title:"",
    aslLists:[],
    type:1,
    page:1,
    loading:false,
    viewPortHeight:'',

  }

  computed = {
  }

  watch = {
  }

  methods = {
   aslData(){
     this.loading=true
     let uname
    cml.getStorage('uname').then((value)=>{
      uname=value
     getAslData({uname:uname,type:this.type,pageNum:this.page}).then(res=>{
       this.loading=false

       if(res.code && res.data.length){
     
        this.aslLists=this.aslLists.concat(res.data.map((value)=>{
            
             value.createTime=moment(value.createTime)
           if(value.type==1){
             value.type="收入"
           }else if(value.type==2){
             value.type="支出"
           }
           return value
         }))
       
       }else{
           cml.showToast({
        message: "没有更多了",
        duration: 1000
      })

       }

     }).catch(err=>{})
    })


   },
   checkValue(title){
     if(title==='ASL1明细'){
       this.type='asl1'

     }else if(title==='ASL2明细'){
         this.type='asl2'

     }else if(title==='ASL5明细'){
       this.type='asl5'
     }else{
       this.type='asl3'
     }

   },
   onBottom(){
      cml.showToast({
        message: "加载更多...",
        duration: 1000
      })
      setTimeout(() => {
        this.page++
        this.aslData()
      }, 800)

   },
//    //获取小程序视口的高度
//    getViewportData(){
//      wx.getSystemInfo({
//   success: function (res) {
//     // 获取可使用窗口宽度
//     let clientHeight = res.windowHeight;
//     // 获取可使用窗口高度
//     let clientWidth = res.windowWidth;
//     // 算出比例
//     let ratio = 750 / clientWidth;
//     // 算出高度(单位rpx)
 
//     // 设置高度 
//   that.height= clientHeight
//   }
// });


//    }


  }

  beforeCreate() {
  }

  created() {
  }

  beforeMount() {
  }

  mounted() {
    cml.getStorage('viewPortHeight').then((value)=>{
    // 处理获取到的键值
    this.viewPortHeight=value
})
    this.checkValue(this.title)
    this.aslData()
  }

  beforeDestroy() {
  }

  destroyed() {
  }
}

export default new ASL();
</script>

<style >
.container{
width: 750cpx;
padding-top: 20cpx;
}

.list-wrap{
  margin:0 auto;
  min-height:150cpx;
  width: 750cpx;
  display: flex;
  justify-content: space-around;
  align-items: center;
  flex-direction: column;
  background: #fff;
  border-bottom: 5cpx solid #fff;
  padding:20cpx;
  border-bottom: 1cpx solid #F3F3F3;
}

.top{
    width: 710cpx;
   display: flex;
  justify-content:space-between;
  align-items: center;
  flex-direction: row;
  color: #595858;
  font-size: 36cpx;

}

.bottom{
  width: 710cpx;
   display: flex;
  justify-content: space-between;
  align-items: center;
  flex-direction: row;
  color: #595858;
  font-size: 36cpx;
}

.top-text2{

font-size: 28cpx;
color: #DC4E47;
}
.top-text3{

font-size: 28cpx;

color: #4E9200;
}

.loading{
  position: fixed;
  top:35%;
  left: 50%;
  transform: translate(-50%);
}

.spec-type{
  font-size: 28cpx;
color: #AEAEAE;

}
.top-text1{
  font-size: 28cpx;
  color: #222222;
}
.bottom-text1{
  
font-size: 20cpx;
color: #AEAEAE;
}
</style>

<script cml-type="json">
{
  "base": {
    "usingComponents": {
      "nav":"/components/nav-ver2/nav-ver2",
      "van-nav-bar": "/vant/nav-bar/index",
       "van-icon": "/vant/icon/index",
        "i-spin": "/iview/spin/index"
    }
  }
}
</script>