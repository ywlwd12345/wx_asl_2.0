<template>
  <view class="container" >
   <view class="head">
    <view class="head-img">
      <image src="{{imageHead}}" style="width:154cpx;height:116cpx;"></image>
    </view>
     <!-- 标题-->
    <view class="test">
      <view class="title" c-bind:tap="register">
        <text style="text-align: center;">忘记密码</text>
      </view>
    </view>
   </view>

   <!-- head end-->
<!-- 账号注册-->
  <view class="user-registered">
    <view class="input">
      <van-cell-group>
        <view class="input-bottom" style="margin-top:40cpx;">
          <van-field
            input-class="spec-root"
            value="{{ uname }}"
            placeholder="请输入用户名"
            border="{{ false }}"
            size='30px'
            bind:change="onChange"
            bind:change="onChangeuid"
          />
        </view>
        <view class="input-bottom">
          <van-field
            value="{{ mobile }}"
            input-class="spec-root"
            size='30px'
            placeholder="请输入手机号"
            border="{{ false }}"
            bind:change="onChange"
            bind:change="onChangePhone"
          />
        </view>
        
        <view class="input-bottom code">
          <van-field
            input-class="spec-root"
            value="{{ code }}"
            placeholder="请输入验证码"
            border="{{ false }}"
            bind:change="onChangeCode"
            center
            clearable="{{false}}"
            use-button-slot
          >
            <!-- <van-button slot="button" size="small" type="primary"  bind:click="passVerification" color="linear-gradient(to right, #e73827, #f85032)">{{verification}}</van-button>-->
          </van-field>
          <view style="position: absolute;right: 50rpx;top: 40rpx;font-size: 25rpx;color: #E9210F;z-index:99999" 
            c-bind:tap="passVerification" class="{{num<60?'daojishi':''}}">{{verification}}</view>
        </view>

        <view class="input-bottom">
          <van-field
            input-class="spec-root"
            value="{{ password }}"
            type="password"
            placeholder="请输入新密码"
            border="{{ false }}"
            size='30px'
            bind:change="onChange"
            bind:change="onChangePassWord"
          />
        </view>

      </van-cell-group>
    </view>
    <!-- input  end-->


    <view class="submit" style="margin-bottom:40cpx;">
      <van-button block type="info"
        color="{{Registercolor===1?'linear-gradient(to right, #e65245, #e43a15)':'#E7E7E7'}}" 
        custom-style="border-radius:45rpx;" bind:click="ConfirmMod">确认
      </van-button>
    </view>
  </view>
   <!-- user-registered end-->
  <!-- 第三方登录-->
  <!--<view class="party">
    <view>
      ———————
    </view>
    <view style="padding: 0 20cpx;font-size: 28cpx;">第三方账号登录</view>
    <view>
      ———————
    </view>
  </view>-->

  <view class="closes">
    <image src="{{imagewx}}" c-bind:tap="goIndex"></image>
  </view>
<!-- 地址弹框-->
   <view class="area"> 
    <van-popup
      show="{{show}}"
      round
      position="bottom"
      custom-style="height:40%"
      bind:close="onClose"
    > 
      <van-area area-list="{{ areaList }}"  value="110101"
      bind:change="getCode"
      bind:confirm="yes"
      bind:cancel="cancel"
      />
    </van-popup>
  </view>

  </view>
</template>

<script>
import areaData from '../../untils/area'
import cityId from '../../untils/city'
import cml from 'chameleon-api';
import {getUserLogin,passNumber,invitationToRegister,lookUpPassword} from '../../api/index.js';
import { checkLogin} from '../../untils/publicInterface.js';
import store from '../../store'


class RetrievePassword implements RetrievePasswordInterface {
 props = {
    name: {
      type: String,
      default: '默认值'
    }
  }

  data = {
    uname:'',
    uid:'',
    code:'',
    password:'',
    show:false,
    valueArea:'',
    transitObj:{},
    isFlag:false,
    areaList:areaData,
    verification:'获取验证码',
    num:60,
    mobile:'',
    classnum:1,
    Registercolor:0,
    viewPortHeight:'',
    value1:'',
    value2:'',
    img1:require('../../assets/images/linkIcon/login/dlsj.png'),
    img2:require('../../assets/images/linkIcon/login/mm.png'),
    imageHead:require('../../assets/images/linkIcon/login/logos.png'),
    imagewx:'https://w.aishenglian.com/static/icon/ver2-icon/login/gb@2x.png',
    infodata:{
      uname:'',
      passWord:'',
      mobile:''
    },
    userdata:[]
  }

  computed = {
  }

  watch = {
  }

  methods = {
    //确认修改密码
    ConfirmMod(){
      if(this.password&&this.mobile&&this.code&&this.uname){
          lookUpPassword({newPass:this.password,
          smsCode:this.code,mobile:this.mobile,
          uname:this.uname
          }).then(res=>{
            this.tip(res.msg)
            if(res.code){
              store.commit('changeStatus')
              setTimeout(()=>{
                cml.redirectTo({
                    path: '/pages/login/login'
                  })
                  },2000)
            }
          }).catch(err=>{})
      }else{
         this.tip('请把数据填写完整')
      }
      


    },
    onChangePhone(e){
      this.mobile=e.detail
      this.judgeEmpty()
    },
//验证码输入框
    onChangeCode(e){
      this.code=e.detail
      this.judgeEmpty()
    },
    //密码输入框
    onChangePassWord(e){
      this.password=e.detail
      this.judgeEmpty()
    },
    onChangeuid(e){
      this.uname=e.detail
      this.judgeEmpty()
    },
    judgeEmpty(){
      console.log('执行')
       if(this.password&&this.mobile&&this.code&&this.uname){
         this.Registercolor=1
       }else{
         this.Registercolor=0
       }
    },

    //发送验证码
    passVerification(){
       //校验
      if(this.mobile){
        passNumber({mobile:this.mobile}).then(res=>{
          this.tip(res.msg)
          if(res.code){
            this.num=60
            this.Countdown()
          }
        }).catch(err=>{
        })
      }else{
        this.tip('请输入手机号')
      }
    },
    // 倒计时
    Countdown(){
      this.verification='('+'已发送'+this.num+'s'+')'
      this.num--
      let TimeId=setTimeout(() => {
        if(this.num<0){
          this.verification='重新发送'
          this.num=60
         clearTimeout(TimeId)
        }else{
          this.Countdown()
        }

    },1000)
    },
    tip(msg){
      cml.showToast({
    message: msg,
    duration: 1000
})

    },

    goIndex(){
      store.commit('changeStatus')
      cml.getStorage("infodata").then(value => {
        if(value){
          cml.removeStorage('infodata')
        }
      })
      // store.commit('changeCancelLogin',false)
        cml.redirectTo({
          path: '/pages/login/login',
        })
    },

    init(){
      checkLogin()

    }
  }

  beforeCreate() {
  }

  created() {
  }

  beforeMount() {
  }

  mounted() {
    cml.getStorage('viewPortHeight').then((value)=>{
    // 处理获取到的键值
    this.viewPortHeight=value
})
  }

  beforeDestroy() {
  }

  destroyed() {
  }
}

export default new RetrievePassword();
</script>

<style scoped>
.container{
  width: 750cpx;
  background: #fff;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  position: relative;
}

.head{
  padding-top: 90rpx;
  width: 750cpx;
  height:580cpx;
  background: linear-gradient(to right, #e73827, #f85032); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
  color:#fff;
  font-size: 72cpx;
  font-weight: bold;
  display: flex;
  /* flex-direction: row; */
  justify-content: center;
  align-items: center;

}

.user-registered{
  padding:0 40cpx;
  position: absolute;
 border: 1px solid rgba(227, 227, 227, 1);
  box-shadow: 0 1px 5px rgba(0, 0, 0, 0.24), 0 1.5px 22px rgba(0, 0, 0, 0.12);
  top:500cpx;
  width: 710cpx;
  min-height: 480cpx;
  border-radius: 20cpx;
  background: #fff;
}
.submit{
  width: 100%;
  margin:0 auto;
margin-top:50cpx;
}

.registered-question{
 margin-top:10cpx;
/* width: 710cpx; */
display: flex;
flex-direction: row;
justify-content: center;
align-items: center;
 color:#bfbfbf;
letter-spacing: 2cpx;
font-size: 36cpx;
margin:20cpx 0;
}
.registered-question text{
  font-size: 22cpx;
  color: #EA2210;
}
.spec-root{
    background: #FAFAFA;
    padding: 10cpx 20cpx;
    height: 80cpx;
    /* border: 1cpx solid #DDDDDD; */
    border-radius: 45cpx;
}
.code{
  position: relative;
}
.input-bottom{
  /* background-color: #eee;
  border-radius: 8cpx; */
}
/* 2.0版本 */
.test{
  width: 100%;
  display: flex;
  flex-direction: row;
  justify-content: center;
  margin-top: 110cpx;
  padding: 0 100cpx;
}
.test .title{
  font-size: 30cpx;
  width: 50%;
}
.test text{
  font-weight:normal;
}
.cur{
  font-size: 27.5cpx!important;
  color: #FCD7D5!important;
}
.party{
  position: absolute;
  top: 1080rpx;
  display: flex;
  flex-direction: row;
  justify-content: space-around;
  color: #D4D4D4;
}
.closes{
  position: absolute;
  top:140rpx;
  right: 34rpx;
}
.closes image{
  width:30cpx;
  height:30cpx;
  border-radius:1cpx;

}
.daojishi{
  color: #999999!important;
}
/* .wxlogin{
  position: absolute;
  top: 1150rpx;
  display: flex;
  flex-direction: row;
  justify-content: space-around;
}
.wxlogin image{
  width:80cpx;
  height:80cpx;
  border:1cpx solid rgba(170,170,170,1);
  border-radius:50%;
} */
</style>

<script cml-type="json">
{
  "base": {
    "usingComponents": {
          "van-field": "/vant/field/index",
          "van-area": "/vant/area/index",
          "van-button": "/vant//button/index",
          "van-popup": "/vant/popup/index"
    }
  }
}
</script>