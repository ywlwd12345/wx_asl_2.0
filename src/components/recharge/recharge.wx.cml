<template>
  <view class="container" style="min-height:{{viewPortHeight}}cpx;">
  <nav title="{{title}}"></nav>
      <list
      bottom-offset="{{20}}"
      c-bind:scrolltobottom="onBottom"
      c-bind:onscroll="onScroll"
      height="{{-1}}"
    >
        <cell
          class="cell"
          c-for="{{pbdxliag}}"
          c-for-index="i"
          c-for-item="item"
          c-key="id"
        >
          <view class="panel">
          <view class="left">
          <view class="item1 item">
          <text>{{item.msg}}</text>
          </view>
          <view class="item2 item"><text>{{item.create_time}}</text></view>
          <!--<view class="item3 item"><text>{{item.msg}}</text></view>-->
          </view>
          <view class="right">
        <text class="{{item.type===1?'coin1':'coin2'}}">{{item.type===1?'+':'-'}}{{item.amount}}</text>
          </view>

         
          </view>
        </cell>
    </list>


  <view class="loading">
    <i-spin  c-if="{{ loading}}"  size="large"></i-spin>
  </view>



  </view>
</template>

<script>
import cml from 'chameleon-api';

import { moment }  from '../../untils/moment.js'

import { recordingPb , recordingDx} from '../../api/grouping.js' //引入拼团模块接口

class Recharge implements RechargeInterface {
  props = {
    name: {
      type: String,
      default: '默认值'
    },
       num: {
      type: String,
      default: ''
    }
  }

  data = {
    title:'',
    page:1,
    pbdxliag:[]
   
  }

  computed = {
  }

  watch = {
  }

  methods = {
     onBottom(){
      cml.showToast({
        message: "加载更多...",
        duration: 1000
      })
      setTimeout(() => {
        this.page++
        this.getData()
      }, 800)

   },
     getData(){
       this.loading=true
       let Fn=recordingPb
       this.num==='2' &&(Fn=recordingDx)
        cml.getStorage('uname').then((value)=>{
         if(value){
     Fn({page:this.page,uname:value}).then(res=>{
        this.loading=false
        if(!res.data.length){
        
            cml.showToast({
        message: "没有更多了",
        duration: 1000
      })

        }
        if(res.code){
          console.log(res,'波波狗')
          this.pbdxliag= this.pbdxliag.concat(res.data.map(d=>{
          
        
            return d
          }))

        }


      }).catch(err=>{

      })

         }
         })

    },

    setTitle(){
    
if(this.num==='1'){
  this.title="拼吧币记录"
}else{
  this.title="低消币记录"
}
    },
    init(){
      this.setTitle()

      this.getData()
    }
  }

  beforeCreate() {
  }

  created() {
  }

  beforeMount() {
  }

  mounted() {
    cml.getStorage('viewPortHeight').then((value)=>{
    // 处理获取到的键值
    this.viewPortHeight=value
})
this.init()
  }

  beforeDestroy() {
  }

  destroyed() {
  }
}

export default new Recharge();
</script>

<style >

.container{
  width:750cpx;
  


}

.panel{
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  width: 750cpx;
  background: #fff;
  border-bottom:2cpx solid #eee;
  padding:20cpx 20cpx;

}

.item{
  margin-top:15cpx;
}
.loading{
  position: fixed;
  top:35%;
  left: 50%;
  transform: translate(-50%);
}
.color2{
  color:#ff410f;
}
/* .right{
   display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;

} */

.coin1{
font-size: 28cpx;
font-weight: 600;
color: #DC4D46;
}

.coin2{
font-size: 28cpx;
font-weight: 600;
color: #4E9100;
}

</style>

<script cml-type="json">
{
  "base": {
    "usingComponents": {
       "nav":"/components/nav/nav",
        "i-spin": "/iview/spin/index"
    }
  }
}
</script>